@model IQMStarterKit.Models.ExtendedUserCustom

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Edit User</h3>
        @Html.ValidationSummary(true,
            "",
            new { @class = "text-danger" })
       
        
        <div class="form-group">
            @Html.LabelFor(model => model.FullName,
                htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName,
                    new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "",
                    new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email,
                htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email,
                    new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email,
                    "",
                    new { @class = "text-danger" })
            </div>
        </div>
        
        @if (ViewBag.IsStudent)
        {

            <div class="form-group">
                @Html.LabelFor(model => model.GroupId,
                    htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.GroupId, new SelectList(Model.Groups, "GroupId", "GroupName"), "Select Group", new {@class = "form-control", @id="GroupId"})
                </div>
            </div>

        }
        <div class="form-group">
            @Html.LabelFor(model => model.Password,
                htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password,
                    new {  @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Password,
                    "",
                    new { @class = "text-danger" })
            </div>
        </div>

       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Edit Roles", "EditRoles",
                    new { Email = Model.Email },
                    new { @class = "btn btn-default" })
                @Html.ActionLink("Back to List",
                    "Index",
                    null,
                    new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}


