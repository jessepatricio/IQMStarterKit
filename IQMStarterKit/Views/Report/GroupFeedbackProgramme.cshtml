
@model IQMStarterKit.Models.Report.GroupFeedbackProgramme

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div  class="main_container">

        <div class="page-header"><h4>Programme Survey Group Feedback</h4></div>

        <div class="btn-group">
            <button type="button" class="btn btn-primary btn-xs">Export</button>
            <button type="button" class="btn btn-primary btn-xs dropdown-toggle" data-toggle="dropdown">
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" role="menu">
                <li>@Html.ActionLink("Excel", "ExportToExcel", new { @reportName = "ProgramSurveyReport" })</li>
                <li>@Html.ActionLink("PDF", "ProgramSurveyExportToPDF", new { @reportName = "ProgramSurveyReport" })</li>
                <li><a href="javascript:window.print()">Print</a></li>
            </ul>
        </div>

        <h4>Ratings</h4>
        <table id="comments" style="width:100%" class="display" cellspacing="0">
            <thead>
                <tr>
                    <th>GroupName</th>
                    <th>(1 to 7) Rating</th>
                    <th>Overall Rating</th>
                    <th>Time Allocated Rating</th>
                    <th>Class Size Rating</th>
                    <th>Class Room Rating</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model.GroupRatings)
                {
                    <tr>
                        <td>@Html.DisplayFor(m => item.GroupName)</td>
                        @{ 
                            var output = DDLHelper.GetStarRating(float.Parse(item.GroupAveRating.ToString()));
                            string star = Server.HtmlDecode(output);
                        }
                        <td align="center">@Html.Raw(star)  (@item.GroupAveRating)</td>
                        <td align="center">@DDLHelper.GetRating(item.OverallRating) (@item.OverallRating)</td>
                        <td align="center">@DDLHelper.GetOtherRating(item.TimeAllocatedRating) (@item.TimeAllocatedRating)</td>
                        <td align="center">@DDLHelper.GetOtherRating(item.ClassSizeRating) (@item.ClassSizeRating)</td>
                        <td align="center">@DDLHelper.GetOtherRating(item.ClassRoomRating) (@item.ClassRoomRating)</td>
                    </tr>
                }
            </tbody>

        </table>

        <br />
        <table class="columns" >
            <tr>
                <td><div id="piechart" style="border: 1px solid #ccc"></div></td>
                <td><div id="piechart2" style="border: 1px solid #ccc"></div></td>
            </tr>
        </table>
        <br />

        <h4>Comments</h4>
        <table id="activity" style="width:100%" class="display" cellspacing="0">
            <thead>
                <tr>
                    <th>FullName</th>
                    <th>Comments</th>
                   
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model.GroupComments)
                {
                    <tr>
                        <td>@Html.DisplayFor(m => item.FullName)</td>
                        <td>@Html.DisplayFor(m => item.Comment)</td>
                      
                    </tr>
                }
            </tbody>

        </table>

    </div>

}
<script type="text/javascript" src="https://www.google.com/jsapi"></script>

@section Scripts {

   <script type="text/javascript">

       google.charts.load("current", { packages: ["corechart"] });
       var chartData;

       $(document).ready(function () {
           $('#activity').DataTable({
               "bLengthChange": false,
               "bFilter": true,
               "paging": true

           });

           $('#comments').DataTable({
               "bLengthChange": false,
               "bFilter": true,
               "paging": true

           });

           $.ajax({
               url: "GetProgramOverallData",
               data: "{}",
               dataType: "json",
               type: "POST",
               contentType: "application/json; chartset=utf-8",
               success: function (data) {

                   chartData = data;
                   google.charts.setOnLoadCallback(drawCharts);
                   google.charts.setOnLoadCallback(drawCharts2);

                 
                  
               },
               // ajax error display 
               error: function () {
                   alert("Error loading data! Please try again.");
               }
           });


           function drawCharts() {
               // debugger;
              
               // Callback that creates and populates a data table,    
               // instantiates the pie chart, passes in the data and draws it. 
               //Creates a data table for storing the map data .chart api access this data for displaying
               var xdata = new google.visualization.DataTable();
               //Adding columns to data table to insert the chart data
               xdata.addColumn('string', 'Full Name');
               xdata.addColumn('number', 'Overall Rating');
               //bind the data to the data table using for loop
               //debugger;
               for (var i = 0; i < chartData.length; i++) {
                   var rating = "";
                   if (chartData[i].OverallRating == 5 && chartData[i].OverallRating > 4) {
                       rating = "Excellent";
                   }
                   else if (chartData[i].OverallRating == 4 && chartData[i].OverallRating > 3) {
                       rating = "Very Good";
                   }
                   else if (chartData[i].OverallRating == 3 && chartData[i].OverallRating > 2) {
                       rating = "Good";
                   }
                   else if (chartData[i].OverallRating == 2 && chartData[i].OverallRating > 1) {
                       rating = "Satisfactory";
                   }
                   else if (chartData[i].OverallRating == 1 && chartData[i].OverallRating < 1) {
                       rating = "Below Satisfactory";
                   }


                   xdata.addRow([rating, chartData[i].OverallRating]);
               }
               // Instantiate and draw our chart, passing in some options    
               var chart = new google.visualization.PieChart(document.getElementById('piechart'));
               chart.draw(xdata,
                   {
                       title: "Program Overall Rating", //title of the pie chart
                       position: "center",
                       width: "485",
                       heigth: "500",
                       fontsize: "14px",
                       chartArea: {  width: '50%' }
                   });

           }

           function drawCharts2() {
               // debugger;

               // Callback that creates and populates a data table,    
               // instantiates the pie chart, passes in the data and draws it. 
               //Creates a data table for storing the map data .chart api access this data for displaying
               var xdata = new google.visualization.DataTable();
               //Adding columns to data table to insert the chart data
               xdata.addColumn('string', 'Full Name');
               xdata.addColumn('number', 'Overall Rating');
               //bind the data to the data table using for loop
               //debugger;
               for (var i = 0; i < chartData.length; i++) {
                   var rating = "";
                   if (chartData[i].OverallRating == 5 && chartData[i].OverallRating > 4) {
                       rating = "Excellent";
                   }
                   else if (chartData[i].OverallRating == 4 && chartData[i].OverallRating > 3) {
                       rating = "Very Good";
                   }
                   else if (chartData[i].OverallRating == 3 && chartData[i].OverallRating > 2) {
                       rating = "Good";
                   }
                   else if (chartData[i].OverallRating == 2 && chartData[i].OverallRating > 1) {
                       rating = "Satisfactory";
                   }
                   else if (chartData[i].OverallRating == 1 && chartData[i].OverallRating < 1) {
                       rating = "Below Satisfactory";
                   }


                   xdata.addRow([rating, chartData[i].OverallRating]);
               }
               // Instantiate and draw our chart, passing in some options    
               var chart = new google.visualization.BarChart(document.getElementById('piechart2'));
               chart.draw(xdata,
                   {
                       title: "Program Overall Rating", //title of the pie chart
                       position: "center",
                       width: "485",
                       heigth: "500",
                       fontsize: "14px",
                       chartArea: { width: '50%' },
                       legend: "none"
                   });

           }



       });


     
       
       
       
    </script>



}


