@model IQMStarterKit.Models.FirstThingFirstViewModel

@using Microsoft.AspNet.Identity

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    <div  class="main_container">
        <div>
            <h1 class="heading"><strong><u>Habit #3 : Put First Things First</u></strong></h1>
            <h2 style="text-align:center;">Self-Management</h2>
            <p> Below, list all the things or activies you have to do in the next 7 days.</p>
            @Html.TextAreaFor(model => model.FirstThingFirst.Activities, (Model.FirstThingFirst.Activities != null) ? (object)new { @readonly = "readonly", @class = "p38txtarea form-control", @name = "Activities", style = "width: 900px; height:300px;" } : new { @class = "p38txtarea form-control", @name = "Activities", style = "width: 900px; height:300px;" })
        </div>

        <hr />
        <div>
            <h1 class="heading"><strong>The Important / Urgent Matrix</strong></h1>
            <table style="margin:auto;">
                <tr>
                    <td></td>
                    <td style="text-align:center;">Urgent</td>
                    <td style="text-align:center;">Not Urgent</td>
                </tr>
                <tr>
                    <td style="transform: rotate(270deg);">Important</td>
                    <td style="text-align:center;">
                        I<br />
                        @Html.TextAreaFor(model => model.FirstThingFirst.Matrix1, (Model.FirstThingFirst.Matrix1 != null) ? (object)new { @readonly = "readonly", @class = "p38txtarea form-control", @name = "Matrix1", style = "width: 325px; height:125px;" } : new { @class = "p38txtarea form-control", @name = "Matrix1", style = "width: 325px; height:125px;" })
                    </td>
                    <td style="text-align:center;">
                        II<br />
                        @Html.TextAreaFor(model => model.FirstThingFirst.Matrix2, (Model.FirstThingFirst.Matrix2 != null) ? (object)new { @readonly = "readonly", @class = "p38txtarea form-control", @name = "Matrix2", style = "width: 325px; height:125px;" } : new { @class = "p38txtarea form-control", @name = "Matrix2", style = "width: 325px; height:125px;" })
                    </td>
                </tr>
                <tr>
                    <td style="transform: rotate(270deg);"> Not Important</td>
                    <td style="text-align:center;">
                        III<br />
                        @Html.TextAreaFor(model => model.FirstThingFirst.Matrix1, (Model.FirstThingFirst.Matrix3 != null) ? (object)new { @readonly = "readonly", @class = "p38txtarea form-control", @name = "Matrix3", style = "width: 325px; height:125px;" } : new { @class = "p38txtarea form-control", @name = "Matrix3", style = "width: 325px; height:125px;" })
                    </td>
                    <td style="text-align:center;">
                        IV<br />
                        @Html.TextAreaFor(model => model.FirstThingFirst.Matrix1, (Model.FirstThingFirst.Matrix4 != null) ? (object)new { @readonly = "readonly", @class = "p38txtarea form-control", @name = "Matrix4", style = "width: 325px; height:125px;" } : new { @class = "p38txtarea form-control", @name = "Matrix4", style = "width: 325px; height:125px;" })
                    </td>
                </tr>
            </table>
        </div>
        <hr />
        <div>
            <h1 class="heading"><strong><u>Large Task:</u></strong></h1>
            @Html.TextAreaFor(model => model.FirstThingFirst.LargeTask, (Model.FirstThingFirst.LargeTask != null) ? (object)new { @readonly = "readonly", @class = "p38txtarea form-control", @name = "LargeTask", style = "width: 900px; height:150px;" } : new { @class = "p38txtarea form-control", @name = "LargeTask", style = "width: 900px; height:150px;" })
            <p><strong>Break this down into smaller more manageable tasks:</strong></p>
            <div class="form-inline">
                <div class="row">
                    <label for="SmallTask1">1.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask1, (Model.FirstThingFirst.SmallTask1 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask1" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask1" } })
                </div>
                <div class="row">
                    <label for="SmallTask1">2.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask2, (Model.FirstThingFirst.SmallTask2 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask2" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask2" } })
                </div>
                <div class="row">
                    <label for="SmallTask1">3.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask3, (Model.FirstThingFirst.SmallTask3 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask3" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask3" } })
                </div>
                <div class="row">
                    <label for="SmallTask1">4.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask4, (Model.FirstThingFirst.SmallTask4 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask4" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask4" } })
                </div>
                <div class="row">
                    <label for="SmallTask1">5.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask5, (Model.FirstThingFirst.SmallTask5 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask5" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask5" } })
                </div>
                <div class="row">
                    <label for="SmallTask1">6.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask6, (Model.FirstThingFirst.SmallTask6 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask6" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask6" } })
                </div>
                <div class="row">
                    <label for="SmallTask1">7.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask7, (Model.FirstThingFirst.SmallTask7 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask7" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask7" } })
                </div>
                <div class="row">
                    <label for="SmallTask1">8.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask8, (Model.FirstThingFirst.SmallTask8 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask8" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask8" } })
                </div>
                <div class="row">
                    <label for="SmallTask1">9.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask9, (Model.FirstThingFirst.SmallTask9 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask9" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask9" } })
                </div>
                <div class="row">
                    <label for="SmallTask1">10.</label>@Html.EditorFor(model => model.FirstThingFirst.SmallTask10, (Model.FirstThingFirst.SmallTask10 != null) ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "p38txtbox form-control", name = "SmallTask10" } } : new { htmlAttributes = new { @class = "p38txtbox form-control", name = "SmallTask10" } })
                </div>
            </div>

        </div>


    </div>

    if (Model.FirstThingFirst.Activities == null)
    {
        <div style="text-align: center; margin-top: 20px;" class="form-group`">
            <button type="submit" class="form-control btn btn-primary" style="width: 100px;">Save</button>
        </div>
    }

}
    @using (Html.BeginForm("PageA19UploadFile", "Module", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken();
    <hr />

    <div>
        <img style="width:100%;" src="~/Content/img/timechart.png" alt="Time Table Chart" />
    </div>

        <div class="form-group">
            <div class="col-md-12">
                <div class="col-md-12 form-inline" style="text-align:center; margin-top:20px;">
                    @if (Model != null && Model.FilePath.FileName != null && Model.FilePath.CreatedBy == User.Identity.GetUserId())
                    {
                        @Html.ActionLink("Download File", "PageA19DownloadFile", "Module",
                 new { id = Model.FilePath.StudentActivityId },
                 new { @class = "btn btn-info", role = "button", data_icon = "gear", target = "_new" })


                    }
                    else
                    {
                        @Html.Label("First Thing First", new { @class = "label label-default" })
                        <input type="file" id="FirstThingFirst" name="file" class="form-control" style="width:300px;" />
                        <input type="submit" value="Upload" class="btn btn-primary" />
                    }
                </div>
            </div>
        </div>


}

    <div style="text-align:center; margin-top: 20px;">
        @Html.ActionLink("Previous Page", "PageA18") |
        @Html.ActionLink("Main", "Index") |
        @Html.ActionLink("Next Page", "PageA20")
    </div>


@section Scripts{

    <script type="text/javascript">

        function CheckValue() {

            if ($('#FirstThingFirst').val() == "") {
                // all empty
                toastr.warning('Please select a file to upload.')
                return false;
            }
            return true;

        }

        //confirmation dialog


        $('form').submit(function (e) {
            var currentForm = this;
            e.preventDefault();
            bootbox.confirm("Are you sure you want to submit your work?", function (result) {
                if (result) {
                    if (CheckValue()) {
                        currentForm.submit();
                    }
                }
            });
        });

    </script>
}






